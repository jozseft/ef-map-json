// <auto-generated />
using System;
using MapJSON.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MapJSON.Data.Migrations
{
    [DbContext(typeof(MapJSONContext))]
    [Migration("20221214195008_Add_AppUser_Trip_Tables")]
    partial class AddAppUserTripTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MapJSON.Data.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("MapJSON.Data.Entities.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FinalDestination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("MapJSON.Data.Entities.AppUser", b =>
                {
                    b.OwnsOne("MapJSON.Data.Entities.UserSettings", "UserSettings", b1 =>
                        {
                            b1.Property<Guid>("AppUserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Language")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AppUserId");

                            b1.ToTable("AppUsers");

                            b1.ToJson("UserSettings");

                            b1.WithOwner()
                                .HasForeignKey("AppUserId");

                            b1.OwnsMany("MapJSON.Data.Entities.TableDisplayedColumns", "Tables", b2 =>
                                {
                                    b2.Property<Guid>("UserSettingsAppUserId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    b2.Property<string>("Table")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("UserSettingsAppUserId", "Id");

                                    b2.ToTable("AppUsers");

                                    b2.WithOwner()
                                        .HasForeignKey("UserSettingsAppUserId");

                                    b2.OwnsMany("MapJSON.Data.Entities.TableColumn", "Columns", b3 =>
                                        {
                                            b3.Property<Guid>("TableDisplayedColumnsUserSettingsAppUserId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<int>("TableDisplayedColumnsId")
                                                .HasColumnType("int");

                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int");

                                            b3.Property<string>("DefaultValue")
                                                .HasColumnType("nvarchar(max)");

                                            b3.Property<string>("Name")
                                                .IsRequired()
                                                .HasColumnType("nvarchar(max)");

                                            b3.Property<string>("SortDirection")
                                                .HasColumnType("nvarchar(max)");

                                            b3.HasKey("TableDisplayedColumnsUserSettingsAppUserId", "TableDisplayedColumnsId", "Id");

                                            b3.ToTable("AppUsers");

                                            b3.WithOwner()
                                                .HasForeignKey("TableDisplayedColumnsUserSettingsAppUserId", "TableDisplayedColumnsId");
                                        });

                                    b2.Navigation("Columns");
                                });

                            b1.OwnsOne("MapJSON.Data.Entities.Theme", "Theme", b2 =>
                                {
                                    b2.Property<Guid>("UserSettingsAppUserId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("FontSize")
                                        .HasColumnType("int");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("UserSettingsAppUserId");

                                    b2.ToTable("AppUsers");

                                    b2.WithOwner()
                                        .HasForeignKey("UserSettingsAppUserId");
                                });

                            b1.Navigation("Tables");

                            b1.Navigation("Theme")
                                .IsRequired();
                        });

                    b.Navigation("UserSettings");
                });

            modelBuilder.Entity("MapJSON.Data.Entities.Trip", b =>
                {
                    b.HasOne("MapJSON.Data.Entities.AppUser", "User")
                        .WithMany("Trips")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("MapJSON.Data.Entities.TransitDetail", "Transits", b1 =>
                        {
                            b1.Property<Guid>("TripId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("Destination")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("StartingPoint")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<decimal>("TicketPrice")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("TransportationMode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("TripId", "Id");

                            b1.ToTable("Trips");

                            b1.ToJson("Transits");

                            b1.WithOwner()
                                .HasForeignKey("TripId");
                        });

                    b.Navigation("Transits");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MapJSON.Data.Entities.AppUser", b =>
                {
                    b.Navigation("Trips");
                });
#pragma warning restore 612, 618
        }
    }
}
